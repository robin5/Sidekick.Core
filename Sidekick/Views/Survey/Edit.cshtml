@*
    **********************************************************************************
    * Copyright (c) 2020 Robin Murray
    **********************************************************************************
    *
    * File: Edit.cshtml
    *
    * Description: edit view for Survey controller
    *
    * Author: Robin Murray
    *
    **********************************************************************************
    *
    * Granting License: The MIT License (MIT)
    *
    *   Permission is hereby granted, free of charge, to any person obtaining a copy
    *   of this software and associated documentation files (the "Software"), to deal
    *   in the Software without restriction, including without limitation the rights
    *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *   copies of the Software, and to permit persons to whom the Software is
    *   furnished to do so, subject to the following conditions:
    *   The above copyright notice and this permission notice shall be included in
    *   all copies or substantial portions of the Software.
    *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    *   THE SOFTWARE.
    *
    **********************************************************************************
*@

@model Sidekick.ViewModels.SurveyEditViewModel

@{
    var surveyName = @Model.Name;
    ViewData["Title"] = surveyName;
}

<div class="container-md dsh-container">
    <div class="dsh-title">
        <h2>Edit: @(Model.Name ?? "Undefined")</h2>
    </div>
    <div class="dsh-content">
        <div id="vs-survey-questions" class="vs-survey-questions">

            @if (!ViewData.ModelState.IsValid)
            {
                <div asp-validation-summary="All" class="alert alert-danger"></div>
            }

            <form asp-controller="Survey" asp-action="Edit" method="post" class="form-launch">

                @* -- Survey Id -- *@

                <input asp-for="Id" type="hidden" />

                @* -- Survey Name -- *@

                <label asp-for="Name" class="control-label">Survey Name</label><span>&nbsp;&nbsp;</span>
                <span asp-validation-for="Name" class="alert-danger"></span>
                <input asp-for="Name"
                       title="Enter a descriptive name for the this peer evaluation cycle"
                       class="form-control"
                       autofocus=""
                       required />
                <br />

                @* -- Survey Questions -- *@

                <label class="control-label">Questions</label><span>&nbsp;&nbsp;</span>
                <span asp-validation-for="Questions" class="alert-danger line-validation-message"></span>
                <div id="survey-questions">

                    @if (Model != null && Model.Questions != null)
                    {
                        int rowId = 0;
                        foreach (var question in Model.Questions)
                        {
                            <div id="row-id-@(rowId)" class="question-row survey-question-container">
                                <div class="survey-question-box">
                                    <textarea id="question-@(rowId)" class="q-textarea form-control" name="Questions[@(rowId)]" required>@(question)</textarea>
                                </div>
                                <div class="survey-delete-box">
                                    <a href="#" data-row-id="@(rowId)" onclick="deleteRow(event)">delete</a>
                                </div>
                            </div>
                            rowId++;
                        }
                    }

                </div>

                <div id="tr-add" style="padding-top: 5px">
                    <button type="button" form-survey id="add-question" class="btn btn-primary" value="add-question" onclick="addBlankRow()">
                        Add Question
                    </button>
                </div>
                <hr />

                @* -- Submit and Cancel buttons -- *@

                @await Html.PartialAsync("~/Views/Shared/_SubmitAndCancel.cshtml",
                    new ViewDataDictionary(ViewData) {
                        { "Submit", "Update Survey" },
                        { "cancel-controller", "Survey" },
                        { "cancel-action", "Index" },
                        { "cancel-action-id", Model.Id },
                    })
            </form>
        </div><!-- vs-survey-questions -->
    </div><!-- dsh-content -->
</div><!-- container -->

@section scripts{
    <script src="/js/SurveyEdit.js"></script>
}
